env:
  TERM: alacritty

window:
  padding:
    x: 10
    y: 10
  decorations: none
  opacity: 0.8
  startup_mode: Maximized

font:
  size: 20.0

  normal:
    # family: UDEV Gothic NF
    family: PlemolJP Console NF
    style: Regular

  bold:
    # family: UDEV Gothic NF
    family: PlemolJP Console NF
    style: Bold

  italic:
    # family: UDEV Gothic NF
    family: PlemolJP Console NF
    style: Italic

  bold_italic:
    # family: UDEV Gothic NF
    family: PlemolJP Console NF
    style: Bold Italic

colors:
  name: TokyoNight Night
  author: Folke

  # Default colors
  primary:
    background: "0x1a1b26"
    foreground: "0xc0caf5"

  # Normal colors
  normal:
    black: "0x15161E"
    red: "0xf7768e"
    green: "0x9ece6a"
    yellow: "0xe0af68"
    blue: "0x7aa2f7"
    magenta: "0xbb9af7"
    cyan: "0x7dcfff"
    white: "0xa9b1d6"

  # Bright colors
  bright:
    black: "0x414868"
    red: "0xf7768e"
    green: "0x9ece6a"
    yellow: "0xe0af68"
    blue: "0x7aa2f7"
    magenta: "0xbb9af7"
    cyan: "0x7dcfff"
    white: "0xc0caf5"

  indexed_colors:
    - { index: 16, color: "0xff9e64" }
    - { index: 17, color: "0xdb4b4b" }
theme: Tokyonight_Night

hints:
  start:
    foreground: "#1d1f21"
    background: "#e9ff5e"
  end:
    foreground: "#e9ff5e"
    background: "#1d1f21"
  footer_bar:
    background: "#c5c8c6"
    foreground: "#1d1f21"
# Selection colors
#
# Colors which should be used to draw the selection area.
#
# Allowed values are CellForeground/CellBackground, which reference the
# affected cell, or hexadecimal colors like #ff00ff.
#selection:
#  text: CellBackground
#  background: CellForeground
# Normal colors
#normal:
#  black:   '#1d1f21'
#  red:     '#cc6666'
#  green:   '#b5bd68'
#  yellow:  '#f0c674'
#  blue:    '#81a2be'
#  magenta: '#b294bb'
#  cyan:    '#8abeb7'
#  white:   '#c5c8c6'
# Bright colors
#bright:
#  black:   '#666666'
#  red:     '#d54e53'
#  green:   '#b9ca4a'
#  yellow:  '#e7c547'
#  blue:    '#7aa6da'
#  magenta: '#c397d8'
#  cyan:    '#70c0b1'
#  white:   '#eaeaea'
# Dim colors
#
# If the dim colors are not set, they will be calculated automatically based
# on the `normal` colors.
#dim:
#  black:   '#131415'
#  red:     '#864343'
#  green:   '#777c44'
#  yellow:  '#9e824c'
#  blue:    '#556a7d'
#  magenta: '#75617b'
#  cyan:    '#5b7d78'
#  white:   '#828482'
# Indexed Colors
#
# The indexed colors include all colors from 16 to 256.
# When these are not set, they're filled with sensible defaults.
#
# Example:
#   `- { index: 16, color: '#ff00ff' }`
#
#indexed_colors: []
# Transparent cell backgrounds
#
# Whether or not `window.opacity` applies to all cell backgrounds or only to
# the default background. When set to `true` all cells will be transparent
# regardless of their background color.
#transparent_background_colors: false
# Bell
#
# The bell is rung every time the BEL control character is received.
#bell:
# Visual Bell Animation
#
# Animation effect for flashing the screen when the visual bell is rung.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#animation: EaseOutExpo
# Duration of the visual bell flash in milliseconds. A `duration` of `0` will
# disable the visual bell animation.
#duration: 0
# Visual bell animation color.
#color: '#ffffff'
# Bell Command
#
# This program is executed whenever the bell is rung.
#
# When set to `command: None`, no command will be executed.
#
# Example:
#   command:
#     program: notify-send
#     args: ["Hello, World!"]
#
#command: None
#selection:
# This string contains all characters that are used as separators for
# "semantic words" in Alacritty.
#semantic_escape_chars: ",‚îÇ`|:\"' ()[]{}<>\t"
# When set to `true`, selected text will be copied to the primary clipboard.
#save_to_clipboard: false
#cursor:
# Cursor style
#style:
# Cursor shape
#
# Values for `shape`:
#   - ‚ñá Block
#   - _ Underline
#   - | Beam
#shape: Block
# Cursor blinking state
#
# Values for `blinking`:
#   - Never: Prevent the cursor from ever blinking
#   - Off: Disable blinking by default
#   - On: Enable blinking by default
#   - Always: Force the cursor to always blink
#blinking: Off
# Vi mode cursor style
#
# If the vi mode cursor style is `None` or not specified, it will fall back to
# the style of the active value of the normal cursor.
#
# See `cursor.style` for available options.
#vi_mode_style: None
# Cursor blinking interval in milliseconds.
#blink_interval: 750
# Time after which cursor stops blinking, in seconds.
#
# Specifying '0' will disable timeout for blinking.
#blink_timeout: 5
# If this is `true`, the cursor will be rendered as a hollow box when the
# window is not focused.
#unfocused_hollow: true
# Thickness of the cursor relative to the cell width as floating point number
# from `0.0` to `1.0`.
#thickness: 0.15
# Live config reload (changes require restart)
live_config_reload: true
# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g.
# `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the
# shell.
#
# Default:
#   - (Linux/BSD/macOS) `$SHELL` or the user's login shell, if `$SHELL` is unset
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login
# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None
# Offer IPC using `alacritty msg` (unix only)
#ipc_socket: true
#mouse:
# Click settings
#
# The `double_click` and `triple_click` settings control the time
# alacritty should wait for accepting multiple clicks as one double
# or triple click.
#double_click: { threshold: 300 }
#triple_click: { threshold: 300 }
# If this is `true`, the cursor is temporarily hidden when typing.
#hide_when_typing: false
# Hints
#
# Terminal hints can be used to find text or hyperlink in the visible part of
# the terminal and pipe it to other applications.
#hints:
# Keys used for the hint labels.
#alphabet: "jfkdls;ahgurieowpq"
# List with all available hints
#
# Each hint must have any of `regex` or `hyperlinks` field and either an
# `action` or a `command` field. The fields `mouse`, `binding` and
# `post_processing` are optional.
#
# The `hyperlinks` option will cause OSC 8 escape sequence hyperlinks to be
# highlighted.
#
# The fields `command`, `binding.key`, `binding.mods`, `binding.mode` and
# `mouse.mods` accept the same values as they do in the `key_bindings` section.
#
# The `mouse.enabled` field controls if the hint should be underlined while
# the mouse with all `mouse.mods` keys held or the vi mode cursor is above it.
#
# If the `post_processing` field is set to `true`, heuristics will be used to
# shorten the match if there are characters likely not to be part of the hint
# (e.g. a trailing `.`). This is most useful for URIs and applies only to
# `regex` matches.
#
# Values for `action`:
#   - Copy
#       Copy the hint's text to the clipboard.
#   - Paste
#       Paste the hint's text to the terminal or search.
#   - Select
#       Select the hint's text.
#   - MoveViModeCursor
#       Move the vi mode cursor to the beginning of the hint.
#enabled:
# - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
#           [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^‚ü®‚ü©`]+"
#   hyperlinks: true
#   command: xdg-open
#   post_processing: true
#   mouse:
#     enabled: true
#     mods: None
#   binding:
#     key: U
#     mods: Control|Shift
# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty
# captures the mouse, the `Shift` modifier is automatically added as a
# requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings for actions not exclusive to mouse mode)
#
# - Mouse exclusive actions:
#
#   - ExpandSelection
#       Expand the selection to the current mouse cursor location.
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Right,                 action: ExpandSelection }
#  - { mouse: Right,  mods: Control, action: ExpandSelection }
#  - { mouse: Middle, mode: ~Vi,     action: PasteSelection  }
# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`

key_bindings:
  - { key: Tab, mods: Control, chars: "[27;5;9~" }
  - { key: Tab, mods: Shift, chars: "[27;2;9~" }
  - { key: Tab, mods: Control|Shift, chars: "[27;6;9~" }
